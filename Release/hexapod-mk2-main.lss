
hexapod-mk2-main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001f4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000070  00800060  00800060  00000268  2**0
                  ALLOC
  2 .stab         000006cc  00000000  00000000  00000268  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000934  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 c8 00 	jmp	0x190	; 0x190 <__vector_10>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 3d       	cpi	r26, 0xD0	; 208
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 b5 00 	call	0x16a	; 0x16a <main>
  74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <initialize_es>:
  7c:	10 92 80 00 	sts	0x0080, r1
  80:	10 92 bd 00 	sts	0x00BD, r1
  84:	10 92 61 00 	sts	0x0061, r1
  88:	08 95       	ret

0000008a <es_attach>:
  8a:	8e 31       	cpi	r24, 0x1E	; 30
  8c:	40 f4       	brcc	.+16     	; 0x9e <es_attach+0x14>
  8e:	e8 2f       	mov	r30, r24
  90:	f0 e0       	ldi	r31, 0x00	; 0
  92:	ee 0f       	add	r30, r30
  94:	ff 1f       	adc	r31, r31
  96:	ef 57       	subi	r30, 0x7F	; 127
  98:	ff 4f       	sbci	r31, 0xFF	; 255
  9a:	71 83       	std	Z+1, r23	; 0x01
  9c:	60 83       	st	Z, r22
  9e:	08 95       	ret

000000a0 <es_detach>:
  a0:	8e 31       	cpi	r24, 0x1E	; 30
  a2:	40 f4       	brcc	.+16     	; 0xb4 <es_detach+0x14>
  a4:	e8 2f       	mov	r30, r24
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	ee 0f       	add	r30, r30
  aa:	ff 1f       	adc	r31, r31
  ac:	ef 57       	subi	r30, 0x7F	; 127
  ae:	ff 4f       	sbci	r31, 0xFF	; 255
  b0:	11 82       	std	Z+1, r1	; 0x01
  b2:	10 82       	st	Z, r1
  b4:	08 95       	ret

000000b6 <es_trigger>:
  b6:	8e 31       	cpi	r24, 0x1E	; 30
  b8:	d0 f4       	brcc	.+52     	; 0xee <es_trigger+0x38>
  ba:	90 91 61 00 	lds	r25, 0x0061
  be:	9e 31       	cpi	r25, 0x1E	; 30
  c0:	b0 f4       	brcc	.+44     	; 0xee <es_trigger+0x38>
  c2:	e0 91 bd 00 	lds	r30, 0x00BD
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	ee 59       	subi	r30, 0x9E	; 158
  ca:	ff 4f       	sbci	r31, 0xFF	; 255
  cc:	80 83       	st	Z, r24
  ce:	80 91 bd 00 	lds	r24, 0x00BD
  d2:	8f 5f       	subi	r24, 0xFF	; 255
  d4:	80 93 bd 00 	sts	0x00BD, r24
  d8:	80 91 bd 00 	lds	r24, 0x00BD
  dc:	8e 31       	cpi	r24, 0x1E	; 30
  de:	11 f4       	brne	.+4      	; 0xe4 <es_trigger+0x2e>
  e0:	10 92 bd 00 	sts	0x00BD, r1
  e4:	80 91 61 00 	lds	r24, 0x0061
  e8:	8f 5f       	subi	r24, 0xFF	; 255
  ea:	80 93 61 00 	sts	0x0061, r24
  ee:	08 95       	ret

000000f0 <es_dispatch>:
  f0:	80 91 61 00 	lds	r24, 0x0061
  f4:	88 23       	and	r24, r24
  f6:	19 f1       	breq	.+70     	; 0x13e <es_dispatch+0x4e>
  f8:	e0 91 80 00 	lds	r30, 0x0080
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	ee 59       	subi	r30, 0x9E	; 158
 100:	ff 4f       	sbci	r31, 0xFF	; 255
 102:	e0 81       	ld	r30, Z
 104:	80 91 61 00 	lds	r24, 0x0061
 108:	81 50       	subi	r24, 0x01	; 1
 10a:	80 93 61 00 	sts	0x0061, r24
 10e:	80 91 80 00 	lds	r24, 0x0080
 112:	8f 5f       	subi	r24, 0xFF	; 255
 114:	80 93 80 00 	sts	0x0080, r24
 118:	80 91 80 00 	lds	r24, 0x0080
 11c:	8e 31       	cpi	r24, 0x1E	; 30
 11e:	11 f4       	brne	.+4      	; 0x124 <es_dispatch+0x34>
 120:	10 92 80 00 	sts	0x0080, r1
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	ee 0f       	add	r30, r30
 128:	ff 1f       	adc	r31, r31
 12a:	ef 57       	subi	r30, 0x7F	; 127
 12c:	ff 4f       	sbci	r31, 0xFF	; 255
 12e:	80 81       	ld	r24, Z
 130:	91 81       	ldd	r25, Z+1	; 0x01
 132:	00 97       	sbiw	r24, 0x00	; 0
 134:	21 f0       	breq	.+8      	; 0x13e <es_dispatch+0x4e>
 136:	01 90       	ld	r0, Z+
 138:	f0 81       	ld	r31, Z
 13a:	e0 2d       	mov	r30, r0
 13c:	09 95       	icall
 13e:	08 95       	ret

00000140 <servomotor_attach>:
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	08 95       	ret

00000144 <initialize_hp>:
 144:	10 92 c7 00 	sts	0x00C7, r1
 148:	10 92 c8 00 	sts	0x00C8, r1
 14c:	10 92 c9 00 	sts	0x00C9, r1
 150:	10 92 ca 00 	sts	0x00CA, r1
 154:	10 92 cb 00 	sts	0x00CB, r1
 158:	10 92 cc 00 	sts	0x00CC, r1
 15c:	10 92 cd 00 	sts	0x00CD, r1
 160:	10 92 ce 00 	sts	0x00CE, r1
 164:	10 92 cf 00 	sts	0x00CF, r1
 168:	08 95       	ret

0000016a <main>:
 16a:	0e 94 3e 00 	call	0x7c	; 0x7c <initialize_es>
 16e:	0e 94 bc 00 	call	0x178	; 0x178 <initialize_timer0>
 172:	80 e0       	ldi	r24, 0x00	; 0
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	08 95       	ret

00000178 <initialize_timer0>:
 178:	8d e0       	ldi	r24, 0x0D	; 13
 17a:	83 bf       	out	0x33, r24	; 51
 17c:	12 be       	out	0x32, r1	; 50
 17e:	8d e7       	ldi	r24, 0x7D	; 125
 180:	8c bf       	out	0x3c, r24	; 60
 182:	89 b7       	in	r24, 0x39	; 57
 184:	82 60       	ori	r24, 0x02	; 2
 186:	89 bf       	out	0x39, r24	; 57
 188:	88 b7       	in	r24, 0x38	; 56
 18a:	82 60       	ori	r24, 0x02	; 2
 18c:	88 bf       	out	0x38, r24	; 56
 18e:	08 95       	ret

00000190 <__vector_10>:
 190:	1f 92       	push	r1
 192:	0f 92       	push	r0
 194:	0f b6       	in	r0, 0x3f	; 63
 196:	0f 92       	push	r0
 198:	11 24       	eor	r1, r1
 19a:	2f 93       	push	r18
 19c:	3f 93       	push	r19
 19e:	4f 93       	push	r20
 1a0:	5f 93       	push	r21
 1a2:	6f 93       	push	r22
 1a4:	7f 93       	push	r23
 1a6:	8f 93       	push	r24
 1a8:	9f 93       	push	r25
 1aa:	af 93       	push	r26
 1ac:	bf 93       	push	r27
 1ae:	ef 93       	push	r30
 1b0:	ff 93       	push	r31
 1b2:	80 91 60 00 	lds	r24, 0x0060
 1b6:	8f 5f       	subi	r24, 0xFF	; 255
 1b8:	80 93 60 00 	sts	0x0060, r24
 1bc:	80 91 60 00 	lds	r24, 0x0060
 1c0:	84 36       	cpi	r24, 0x64	; 100
 1c2:	28 f0       	brcs	.+10     	; 0x1ce <__vector_10+0x3e>
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	0e 94 5b 00 	call	0xb6	; 0xb6 <es_trigger>
 1ca:	10 92 60 00 	sts	0x0060, r1
 1ce:	ff 91       	pop	r31
 1d0:	ef 91       	pop	r30
 1d2:	bf 91       	pop	r27
 1d4:	af 91       	pop	r26
 1d6:	9f 91       	pop	r25
 1d8:	8f 91       	pop	r24
 1da:	7f 91       	pop	r23
 1dc:	6f 91       	pop	r22
 1de:	5f 91       	pop	r21
 1e0:	4f 91       	pop	r20
 1e2:	3f 91       	pop	r19
 1e4:	2f 91       	pop	r18
 1e6:	0f 90       	pop	r0
 1e8:	0f be       	out	0x3f, r0	; 63
 1ea:	0f 90       	pop	r0
 1ec:	1f 90       	pop	r1
 1ee:	18 95       	reti

000001f0 <_exit>:
 1f0:	f8 94       	cli

000001f2 <__stop_program>:
 1f2:	ff cf       	rjmp	.-2      	; 0x1f2 <__stop_program>
